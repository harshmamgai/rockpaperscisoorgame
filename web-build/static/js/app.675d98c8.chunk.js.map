{"version":3,"sources":["src/sign/rock.png","src/sign/paper.png","src/sign/scissors.png","src/PlayScreen.js","App.js","web-build/register-service-worker.js"],"names":["module","exports","rock","require","paper","cessor","Bgcolors","randomImg","emojis","randoms","Math","floor","random","console","log","styles","StyleSheet","create","container","alignItems","justifyContent","flex","counter","fontSize","color","sign","width","height","button","position","bottom","PlayScreen","useState","setcounter","useEffect","timer","setTimeout","prv","clearTimeout","View","style","compose","backgroundColor","Image","source","Button","onPress","title","Text","App","play","setplay","header","StatusBar","marginBottom","marginTop","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,qJCIrCC,EAAKC,EAAQ,KACbC,EAAMD,EAAQ,KACdE,EAAOF,EAAQ,KACfG,EAAS,CAAC,UAAU,UAAU,WAE9BC,EAAW,WACb,IAAMC,EAAO,CAACN,EAAKE,EAAMC,GAErBI,EAAQC,KAAKC,MAAoB,EAAdD,KAAKE,UAE5B,OADAC,QAAQC,IAAIL,GACLD,EAAOC,IAElBF,IAUA,IAmCUQ,EAASC,IAAWC,OAAO,CACjCC,UAAU,CACNC,WAAW,SACXC,eAAe,SACfC,KAAK,GAETC,QAAQ,CACJC,SAAS,IACTC,MAAM,SAGdC,KAAK,CACDC,MAAM,IACNC,OAAO,KAEXC,OAAO,CACHC,SAAS,WACTC,OAAO,MAGIC,EAvDG,WAAO,IAAD,EACMC,mBAAS,GADf,WACjBV,EADiB,KACRW,EADQ,KAgBpB,OAdJC,qBAAU,WAEV,GADArB,QAAQC,IAAIQ,KACTA,EAAQ,GAAX,CAEA,IAAMa,EAAOC,YAAW,WACpBH,GAAW,SAAAI,GAAG,OAAGA,EAAI,OAEtB,KACC,OAAO,WACHC,aAAaH,OAGlB,CAACb,IAII,kBAACiB,EAAA,EAAD,CAAMC,MAAOxB,IAAWyB,QAAQ,CAACC,gBAAgBpC,EAASgB,EAAQ,IAAIP,EAAOG,YAEvEI,EAAQ,EACN,oCACA,kBAACqB,EAAA,EAAD,CAAOH,MAAOzB,EAAOU,KAAKmB,OAAQrC,MACvC,kBAACgC,EAAA,EAAD,CAAMC,MAAOzB,EAAOa,QACpB,kBAACiB,EAAA,EAAD,CAAQC,QAAS,kBAAIb,EAAW,IAAIc,MAAM,gBAMnC,kBAACC,EAAA,EAAD,CAAMR,MAAOzB,EAAOO,SAAUA,KCjDjC,SAAS2B,IAAO,IAAD,EAENjB,oBAAS,GAFH,WAEvBkB,EAFuB,KAEjBC,EAFiB,KAG5B,OAEED,EAAW,kBAAC,EAAD,MACX,kBAACX,EAAA,EAAD,CAAMC,MAAOzB,EAAOG,WAClB,kBAAC8B,EAAA,EAAD,CAAMR,MAAOzB,EAAOqC,QAApB,uBACA,kBAACJ,EAAA,EAAD,CAAMR,MAAO,CAACjB,SAAS,KAAvB,8BACA,kBAACgB,EAAA,EAAD,CAAMC,MAAOzB,EAAOa,QACpB,kBAACiB,EAAA,EAAD,CAAQE,MAAM,OAAOD,QAAS,kBAAIK,GAAQ,OAI1C,kBAACE,EAAA,UAAD,CAAWb,MAAM,UAMvB,IAAMzB,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTG,KAAM,EACNqB,gBAAiB,OACjBvB,WAAY,SACZC,eAAgB,UAElBgC,OAAO,CACL7B,SAAS,GACT+B,aAAa,IAEf1B,OAAO,CACLL,SAAS,GACTgC,UAAU,GACV7B,MAAM,Q,4DCvCN,kBAAmB8B,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAAUC,OAGfC,OAAM,SAAUC,GACfpD,QAAQkD,KAAK,oCAAqCE,W","file":"static/js/app.675d98c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rock.864b5a2a.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.cffb3100.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.48d238a6.png\";","import React, { useState,useEffect } from 'react'\nimport { View, Text,StyleSheet, Button,Image } from 'react-native'\n\n//lets import images\nconst rock=require('./sign/rock.png')\nconst paper=require('./sign/paper.png')\nconst cessor=require('./sign/scissors.png')\nconst Bgcolors=['#2ecc71','#9b59b6','#2c3e50']\n\nconst randomImg =()=>{\n    const emojis=[rock,paper,cessor];\n    // const randoms=Math.floor(Math.random()=3)\n    var randoms=Math.floor(Math.random()*3)\n    console.log(randoms)\n    return emojis[randoms]\n}\nrandomImg()\n// export default function playscreen() {\n//     return (\n//         <View>\n//             <Text>hello world</Text>\n//         </View>\n//     )\n// }\n//write 'rnf' to make a new component\n\nconst PlayScreen =() => { \nconst [counter, setcounter] = useState(3)\nuseEffect(() => {\nconsole.log(counter)\nif(counter<1) return;\n//function have been returned above only so the below code will not run what ever is written in this scope\nconst timer= setTimeout(() => {\n    setcounter(prv =>prv-1)\n    \n}, 500);\n    return () => {\n        clearTimeout(timer)\n    \n    }\n}, [counter]);\n//to manipulate the state of counter\n    return (\n  \n        <View style={StyleSheet.compose({backgroundColor:Bgcolors[counter-1]},styles.container)}>\n                 \n            {(counter<1) ? (\n                <>\n                <Image style={styles.sign}source={randomImg()}/>\n           <View style={styles.button}>\n           <Button onPress={()=>setcounter(3)} title=\"Playagain\"/>\n           </View>\n\n\n                </>\n                ):\n                  <Text style={styles.counter}>{counter}</Text>}\n\n            </View>\n      );\n            };\n    const styles = StyleSheet.create({\n    container:{\n        alignItems:\"center\",\n        justifyContent:\"center\",\n        flex:1,\n    },\n    counter:{\n        fontSize:200,\n        color:'white',\n    },\n\nsign:{\n    width:220,\n    height:220,\n},\nbutton:{\n    position:\"absolute\",\n    bottom:30,\n}\n})\nexport default PlayScreen;\n\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport PlayScreen from './src/PlayScreen'\n//import PlayScreen from './PlayScreen';\n\n\nexport default function App() {\n  //here we are making a state\nconst [play, setplay] = useState(false)\n  return (\n    // ternary operator used below\n    play ? (   <PlayScreen/>):(\n    <View style={styles.container}>\n      <Text style={styles.header}>Rock Paper Scissors</Text>\n      <Text style={{fontSize:80}}>✊ ✋ ✌️</Text>\n      <View style={styles.button}>\n      <Button title=\"Play\" onPress={()=>setplay(true)}/>\n      {/* <Button title=\"Play\" onPress={setplay(true)}/> if we will not arrow function here the onpress will be called automatically so we need to add as above*/}\n      </View>\n    \n      <StatusBar style=\"auto\" />\n    </View>\n    )\n  );\n}\n//for syling we do down editing \nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header:{\n    fontSize:60,\n    marginBottom:10,\n  },\n  button:{\n    fontSize:60,\n    marginTop:20,\n    width:400,\n  }\n});\n\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}